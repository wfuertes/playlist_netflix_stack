<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.matera</groupId>
    <artifactId>playlist-middle</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>playlist-middle Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <parent>
        <groupId>br.edu.fatec</groupId>
        <artifactId>playlist</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <tomcat.port>8090</tomcat.port>
        <kayron.admin.port>9093</kayron.admin.port>
        <db.url>jdbc:h2:file:${project.build.directory}/playlist_middle.db</db.url>
        <db.driver>org.h2.Driver</db.driver>
        <db.user>root</db.user>
        <db.password>root</db.password>
        <db.schema>playlist_middle</db.schema>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.1.210</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.matera</groupId>
            <artifactId>playlist-core</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.karyon</groupId>
            <artifactId>karyon-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.karyon</groupId>
            <artifactId>karyon-extensions</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.karyon</groupId>
            <artifactId>karyon-admin-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.ribbon</groupId>
            <artifactId>ribbon-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.servo</groupId>
            <artifactId>servo-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <path>/playlistmiddle</path>
                    <port>${tomcat.port}</port>
                    <update>true</update>
                    <systemProperties>
                        <archaius.deployment.environment>${environment}</archaius.deployment.environment>
                        <!-- Archaius config -->
                        <archaius.fixedDelayPollingScheduler.delayMills>15000</archaius.fixedDelayPollingScheduler.delayMills>
                        <archaius.fixedDelayPollingScheduler.initialDelayMills>7500</archaius.fixedDelayPollingScheduler.initialDelayMills>
                        <!-- <archaius.configurationSource.additionalUrls>file:///${basedir}/src/main/resources/netteclab-local.properties</archaius.configurationSource.additionalUrls> -->
                        <!-- Eureka properties for local running -->
                        <eureka.enableSelfPreservation>false</eureka.enableSelfPreservation>
                        <eureka.registration.enabled>true</eureka.registration.enabled>
                        <eureka.environment>test</eureka.environment>
                        <eureka.datacenter>default</eureka.datacenter>
                        <http.port>${tomcat.port}</http.port>
                        <!-- other properties -->
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                        <com.sun.xml.ws.transport.http.client.HttpTransportPipe.dump>true
                        </com.sun.xml.ws.transport.http.client.HttpTransportPipe.dump>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <!-- Note that we're executing the Flyway plugin in the "generate-sources" phase -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${db.url};MODE=MYSQL;DATABASE_TO_LOWER=TRUE;INIT=CREATE SCHEMA IF NOT EXISTS ${db.schema}\;SET SCHEMA ${db.schema};</url>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                    <table>schema_history</table>
                    <locations>
                        <location>filesystem:${project.basedir}/src/main/resources/db/migration</location>
                    </locations>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>2.1.210</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <!-- The jOOQ code generation plugin is also executed in the generate-sources phase, prior to compilation -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jdbc>
                        <driver>${db.driver}</driver>
                        <url>${db.url}</url>
                        <user>${db.user}</user>
                        <password>${db.password}</password>
                    </jdbc>
                    <generator>
                        <database>
                            <includes>.*</includes>
                            <inputSchema>${db.schema}</inputSchema>
                            <includeExcludeColumns>true</includeExcludeColumns>
                            <syntheticPrimaryKeys/>
                            <excludes>schema_history</excludes>
                        </database>
                        <target>
                            <packageName>com.wfuertes.playlistmiddle.sql</packageName>
                            <directory>${project.build.directory}/generated-sources/jooq</directory>
                        </target>
                        <generate>
                            <javaTimeTypes>true</javaTimeTypes>
                        </generate>
                    </generator>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>2.1.210</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <environment>local</environment>
            </properties>
        </profile>
    </profiles>
</project>
